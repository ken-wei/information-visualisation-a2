install.packages("shiny")
install.packages("plotly")
install.packages('leaflet')
library(leaflet)

library(ggplot2)
library(scales)
library(plotly)


data <- read.csv("./Births_summary.csv")

print(head(data))
##################
# USER INTERFACE #
##################

# Tab 1: Introduction
intro_tab <- tabPanel(
  'Background',
  
  titlePanel('Population growth in Australia'),
  p('Australia\'s population has been growing consistently since the 1830s.'),
  p(img(src = 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/Australia_Day_%282049745267%29.jpg/800px-Australia_Day_%282049745267%29.jpg')),
  p('Data source: ',
    a(href = 'https://www.abs.gov.au/statistics/people/population', 'Australian Bureau of Statistics'))
)

# Tab 2: Births
sidebar_content <- sidebarPanel(
  h3('Births by state'),
  selectInput(
    'year',
    label = 'Year',
    choices = c('2017'='X2017',
                '2018'='X2018',
                '2019'='X2019',
                '2020'='X2020'),
    selected = 'X2020'
  )
)

main_content <- mainPanel(
  p('plot goes here'),
  plotlyOutput('plot_births'),
  textOutput('caption')
)

births_tab <- tabPanel(
  'Births',
  titlePanel('Births'),
  sidebarLayout(
    sidebar_content, main_content
  )
)

ui <- navbarPage(
  'Population growth in Australia',
  intro_tab,
  births_tab
)


################
# SHINY SERVER #
################

server <- function(input, output, session) {
  # server code would be placed here
  output$plot_births <- renderPlotly({
    p <- ggplot(data=data, aes_string(x='Region',
                                 y=input$year)) +
      geom_bar(stat='identity', width=0.8) +
      labs(x='Region', y=gsub('X','Year:', input$year)) +
      scale_x_discrete(labels = function(x) stringr::str_wrap(x, width = 5 ))
    
    p <- p + scale_y_continuous(labels = comma, expand= c(0,0), limits = c(0, NA)) + theme(text=element_text(size=15), #change font size of all text
              axis.text=element_text(size=15), #change font size of axis text
              axis.title=element_text(size=15), #change font size of axis titles
              plot.title=element_text(size=15), #change font size of plot title
              legend.text=element_text(size=15), #change font size of legend text
              legend.title=element_text(size=15)) #change font size of legend title 
    
    ggplotly(p)
  })
  
  output$caption <- renderText ({
    paste("Testing")
  })
}


#############
# RUN SHINY #
#############


shinyApp(ui, server)